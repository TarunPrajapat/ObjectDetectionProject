{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar ButtonSkeleton = function ButtonSkeleton(_ref) {\n  var _classNames;\n\n  var small = _ref.small,\n      href = _ref.href;\n  var buttonClasses = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--btn\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--sm\"), small), _classNames));\n  var commonProps = {\n    className: buttonClasses\n  };\n  var button = React.createElement(\"button\", _extends({}, commonProps, {\n    type: \"button\"\n  }));\n  var anchor = React.createElement(\"a\", _extends({}, commonProps, {\n    href: href,\n    role: \"button\"\n  })); // eslint-disable-line\n\n  return href ? anchor : button;\n};\n\nButtonSkeleton.propTypes = {\n  /**\n   * Specify whether the Button should be a small variant\n   */\n  small: PropTypes.bool,\n\n  /**\n   * Optionally specify an href for your Button to become an <a> element\n   */\n  href: PropTypes.string\n};\nButtonSkeleton.defaultProps = {\n  small: false\n};\nexport default ButtonSkeleton;","map":null,"metadata":{},"sourceType":"module"}