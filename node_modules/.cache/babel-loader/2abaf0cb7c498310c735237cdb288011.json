{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport handles from '../../globals/js/mixins/handles';\nimport on from '../../globals/js/misc/on';\nimport settings from '../../globals/js/settings';\nimport eventMatches from '../../globals/js/misc/event-matches';\n\nvar forEach =\n/* #__PURE__ */\nfunction () {\n  return Array.prototype.forEach;\n}();\n\nvar toArray = function toArray(arrayLike) {\n  return Array.prototype.slice.call(arrayLike);\n};\n\nvar HeaderSubmenu =\n/*#__PURE__*/\nfunction (_mixin) {\n  _inherits(HeaderSubmenu, _mixin);\n\n  function HeaderSubmenu(element, options) {\n    var _this;\n\n    _classCallCheck(this, HeaderSubmenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HeaderSubmenu).call(this, element, options));\n\n    _this._getAction = function (event) {\n      var isFlyoutMenu = eventMatches(event, _this.options.selectorFlyoutMenu);\n\n      if (isFlyoutMenu) {\n        return _this.constructor.actions.DELEGATE_TO_FLYOUT_MENU;\n      }\n\n      switch (event.type) {\n        case 'keydown':\n          return {\n            32: _this.constructor.actions.TOGGLE_SUBMENU_WITH_FOCUS,\n            // space bar\n            13: _this.constructor.actions.TOGGLE_SUBMENU_WITH_FOCUS,\n            // enter\n            27: _this.constructor.actions.CLOSE_SUBMENU // esc\n            // possible arrow keys\n\n          }[event.which];\n\n        case 'click':\n          return eventMatches(event, _this.options.selectorItem) ? _this.constructor.actions.CLOSE_SUBMENU : null;\n\n        case 'blur':\n        case 'focusout':\n          {\n            var isOfSelf = _this.element.contains(event.relatedTarget);\n\n            return isOfSelf ? null : _this.constructor.actions.CLOSE_SUBMENU;\n          }\n\n        case 'mouseenter':\n          return _this.constructor.actions.OPEN_SUBMENU;\n\n        case 'mouseleave':\n          return _this.constructor.actions.CLOSE_SUBMENU;\n\n        default:\n          return null;\n      }\n    };\n\n    _this._getNewState = function (action) {\n      var trigger = _this.element.querySelector(_this.options.selectorTrigger);\n\n      var isExpanded = trigger.getAttribute(_this.options.attribExpanded) === 'true';\n\n      switch (action) {\n        case _this.constructor.actions.CLOSE_SUBMENU:\n          return false;\n\n        case _this.constructor.actions.OPEN_SUBMENU:\n          return true;\n\n        case _this.constructor.actions.TOGGLE_SUBMENU_WITH_FOCUS:\n          return !isExpanded;\n\n        default:\n          return isExpanded;\n      }\n    };\n\n    _this._setState = function (_ref) {\n      var shouldBeExpanded = _ref.shouldBeExpanded,\n          shouldFocusOnOpen = _ref.shouldFocusOnOpen;\n\n      var trigger = _this.element.querySelector(_this.options.selectorTrigger);\n\n      trigger.setAttribute(_this.options.attribExpanded, shouldBeExpanded);\n      forEach.call(_this.element.querySelectorAll(_this.options.selectorItem), function (item) {\n        item.tabIndex = shouldBeExpanded ? 0 : -1;\n      }); // focus first submenu item\n\n      if (shouldBeExpanded && shouldFocusOnOpen) {\n        _this.element.querySelector(_this.options.selectorItem).focus();\n      }\n    };\n\n    _this.getCurrentNavigation = function () {\n      var focused = _this.element.ownerDocument.activeElement;\n      return focused.nodeType === Node.ELEMENT_NODE && focused.matches(_this.options.selectorItem) ? focused : null;\n    };\n\n    _this.navigate = function (direction) {\n      var items = toArray(_this.element.querySelectorAll(_this.options.selectorItem));\n\n      var start = _this.getCurrentNavigation() || _this.element.querySelector(_this.options.selectorItemSelected);\n\n      var getNextItem = function getNextItem(old) {\n        var handleUnderflow = function handleUnderflow(index, length) {\n          return index + (index >= 0 ? 0 : length);\n        };\n\n        var handleOverflow = function handleOverflow(index, length) {\n          return index - (index < length ? 0 : length);\n        }; // `items.indexOf(old)` may be -1 (Scenario of no previous focus)\n\n\n        var index = Math.max(items.indexOf(old) + direction, -1);\n        return items[handleUnderflow(handleOverflow(index, items.length), items.length)];\n      };\n\n      for (var current = getNextItem(start); current && current !== start; current = getNextItem(current)) {\n        if (!current.matches(_this.options.selectorItemHidden) && !current.parentNode.matches(_this.options.selectorItemHidden) && !current.matches(_this.options.selectorItemSelected)) {\n          current.focus();\n          break;\n        }\n      }\n    };\n\n    _this._handleEvent = function (event) {\n      var trigger = _this.element.querySelector(_this.options.selectorTrigger);\n\n      if (!trigger) {\n        return;\n      }\n\n      var action = _this._getAction(event);\n\n      if (action) {\n        var shouldBeExpanded = _this._getNewState(action);\n\n        _this._setState({\n          shouldBeExpanded: shouldBeExpanded\n        });\n      }\n    };\n\n    _this._handleKeyDown = function (event) {\n      var trigger = _this.element.querySelector(_this.options.selectorTrigger);\n\n      if (!trigger) {\n        return;\n      }\n\n      var action = _this._getAction(event);\n\n      if (event.which === 32) {\n        event.preventDefault();\n      }\n\n      switch (action) {\n        case _this.constructor.actions.DELEGATE_TO_FLYOUT_MENU:\n          // currently we do not have a scenario that handles flyout menu\n          // handleFlyoutMenu\n          break;\n        // currently we do not have a scenario that opens a submenu on keydown\n        // case this.constructor.actions.OPEN_SUBMENU:\n\n        case _this.constructor.actions.CLOSE_SUBMENU:\n          {\n            var shouldBeExpanded = _this._getNewState(action);\n\n            _this._setState({\n              shouldBeExpanded: shouldBeExpanded\n            });\n\n            break;\n          }\n\n        case _this.constructor.actions.TOGGLE_SUBMENU_WITH_FOCUS:\n          {\n            var _shouldBeExpanded = _this._getNewState(action);\n\n            _this._setState({\n              shouldBeExpanded: _shouldBeExpanded,\n              shouldFocusOnOpen: true\n            });\n\n            break;\n          }\n\n        default:\n          {\n            var expanded = trigger.getAttribute(_this.options.attribExpanded) === 'true';\n\n            if (expanded) {\n              var direction = {\n                38: _this.constructor.NAVIGATE.BACKWARD,\n                40: _this.constructor.NAVIGATE.FORWARD\n              }[event.which];\n\n              switch (event.which) {\n                case 35:\n                  {\n                    // end key\n                    event.preventDefault(); // prevents key from scrolling page\n\n                    var menuItems = _this.element.querySelectorAll(_this.options.selectorItem);\n\n                    var lastMenuItem = menuItems[menuItems.length - 1];\n\n                    if (lastMenuItem) {\n                      lastMenuItem.focus();\n                    }\n\n                    break;\n                  }\n\n                case 36:\n                  {\n                    // home key\n                    event.preventDefault(); // prevents key from scrolling page\n\n                    var _this$element$querySe = _this.element.querySelectorAll(_this.options.selectorItem),\n                        _this$element$querySe2 = _slicedToArray(_this$element$querySe, 1),\n                        firstMenuItem = _this$element$querySe2[0];\n\n                    if (firstMenuItem) {\n                      firstMenuItem.focus();\n                    }\n\n                    break;\n                  }\n\n                case 38: // up arrow\n\n                case 40:\n                  // down arrow\n                  _this.navigate(direction);\n\n                  event.preventDefault(); // prevents keys from scrolling page\n\n                  break;\n\n                default:\n                  break;\n              }\n            }\n\n            break;\n          }\n      }\n    };\n\n    var hasFocusOut = 'onfocusout' in window;\n\n    _this.manage(on(_this.element, hasFocusOut ? 'focusout' : 'blur', _this._handleEvent, !hasFocusOut));\n\n    _this.manage(on(_this.element, 'mouseenter', _this._handleEvent));\n\n    _this.manage(on(_this.element, 'mouseleave', _this._handleEvent));\n\n    _this.manage(on(_this.element, 'click', _this._handleEvent));\n\n    _this.manage(on(_this.element, 'keydown', _this._handleKeyDown));\n\n    return _this;\n  }\n  /**\n   * The map associating DOM element and HeaderSubmenu instance.\n   * @member HeaderSubmenu.components\n   * @type {WeakMap}\n   */\n\n\n  _createClass(HeaderSubmenu, null, [{\n    key: \"options\",\n\n    /**\n     * The component options.\n     * If `options` is specified in the constructor,\n     * {@linkcode HeaderSubmenu.create .create()}, or\n     * {@linkcode HeaderSubmenu.init .init()},\n     * properties in this object are overriden for the instance being create and\n     * how {@linkcode HeaderSubmenu.init .init()} works.\n     * @member HeaderSubmenu.options\n     * @type {Object}\n     * @property {string} selectorInit The data attribute to find side navs.\n     */\n    get: function get() {\n      var prefix = settings.prefix;\n      return {\n        selectorInit: '[data-header-submenu]',\n        selectorTrigger: \".\".concat(prefix, \"--header__menu-title\"),\n        selectorItem: \".\".concat(prefix, \"--header__menu .\").concat(prefix, \"--header__menu-item\"),\n        attribExpanded: 'aria-expanded'\n      };\n    }\n    /**\n     * Enum for navigating backward/forward.\n     * @readonly\n     * @member HeaderSubmenu.NAVIGATE\n     * @type {Object}\n     * @property {number} BACKWARD Navigating backward.\n     * @property {number} FORWARD Navigating forward.\n     */\n\n  }]);\n\n  HeaderSubmenu.components = new WeakMap();\n  HeaderSubmenu.actions = {\n    CLOSE_SUBMENU: 'CLOSE_SUBMENU',\n    OPEN_SUBMENU: 'OPEN_SUBMENU',\n    TOGGLE_SUBMENU_WITH_FOCUS: 'TOGGLE_SUBMENU_WITH_FOCUS',\n    DELEGATE_TO_FLYOUT_MENU: 'DELEGATE_TO_FLYOUT_MENU'\n  };\n  HeaderSubmenu.NAVIGATE = {\n    BACKWARD: -1,\n    FORWARD: 1\n  };\n  return HeaderSubmenu;\n}(mixin(createComponent, initComponentBySearch, handles));\n\nexport { HeaderSubmenu as default };","map":null,"metadata":{},"sourceType":"module"}