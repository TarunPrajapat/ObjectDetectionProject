{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\nvar didWarnAboutDeprecation = false;\n\nvar Table = function Table(props) {\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(didWarnAboutDeprecation, 'The `Table` component is being updated in the next release of ' + '`carbon-components-react`. Please use `DataTable.Table` instead.') : void 0;\n    didWarnAboutDeprecation = true;\n  }\n\n  var children = props.children,\n      className = props.className,\n      containerClassName = props.containerClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"className\", \"containerClassName\"]);\n\n  var tableClasses = classNames(className, \"\".concat(prefix, \"--responsive-table\"));\n  var tableContainerClasses = classNames(containerClassName, \"\".concat(prefix, \"--responsive-table-container\"));\n  return React.createElement(\"div\", {\n    className: tableContainerClasses\n  }, React.createElement(\"table\", _extends({}, other, {\n    className: tableClasses,\n    style: {\n      borderCollapse: 'collapse',\n      borderSpacing: 0\n    }\n  }), children));\n};\n\nTable.propTypes = {\n  /**\n   * Provide the contents of your Table\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the <table> node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  containerClassName: PropTypes.string\n};\nexport default Table;","map":null,"metadata":{},"sourceType":"module"}