{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar DropdownSkeleton = function DropdownSkeleton(_ref) {\n  var _classNames;\n\n  var inline = _ref.inline;\n  var wrapperClasses = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--dropdown-v2\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--list-box\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--form-item\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--list-box--inline\"), inline), _classNames));\n  return React.createElement(\"div\", {\n    className: wrapperClasses\n  }, React.createElement(\"div\", {\n    role: \"button\",\n    className: \"\".concat(prefix, \"--list-box__field\")\n  }, React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--list-box__label\")\n  })));\n};\n\nDropdownSkeleton.propTypes = {\n  /**\n   * Specify whether you want the inline version of this control\n   */\n  inline: PropTypes.bool\n};\nDropdownSkeleton.defaultProps = {\n  inline: false\n};\nexport default DropdownSkeleton;","map":null,"metadata":{},"sourceType":"module"}