{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * This file contains the list of the default values of compile-time feature flags.\n *\n * Build toolchain can replace variable here and/or the references\n * in order to apply non-default values to those feature flags.\n *\n * @example Render `foo` if `aFeatureFlag` is `true`, render `bar` otherwise.\n * // `my-component.config.js`\n * const { aFeatureFlag } = require('/path/to/feature-flags');\n * ...\n * module.exports = {\n *   variants: [\n *     {\n *       name: 'default',\n *       label: 'My component',\n *       context: {\n *         aFeatureFlag,\n *         ...\n *       },\n *     },\n *     ...\n *   ],\n * };\n *\n * // `my-component.hbs`\n * <div>\n *   {{#if aFeatureFlag}}\n *     foo\n *   {{else}}\n *     bar\n *   {{/if}}\n * </div>\n *\n * @example Emit `foo` upon clicking on component's element if `aFeatureFlag` is `true`, emit `bar` otherwise.\n * import mixin from '/path/to/globals/js/misc/mixin';\n * import createComponent from '/path/to/globals/js/mixins/create-component';\n * import initComponentBySearch from '/path/to/globals/js/mixins/init-component-by-search';\n * import handles from '/path/to/globals/js/mixins/handles';\n * import on from '/path/to/globals/js/misc/on';\n *\n * import { aFeatureFlag } from '/path/to/globals/js/feature-flags';\n *\n * class MyClass extends mixin(createComponent, initComponentBySearch, handles) {\n *   constructor(element, options) {\n *     super(element, options);\n *     this.manage(\n *       on(this.element, 'click', () => {\n *         console.log(aFeatureFlag ? 'foo' : 'bar');\n *       })\n *     );\n *   }\n * }\n */\nvar breakingChangesX = false;\nvar componentsX = false;\nvar grid = false;\nvar featureFlags = {\n  breakingChangesX: breakingChangesX,\n  componentsX: componentsX,\n  grid: grid\n};\nexport default featureFlags;\nexport { featureFlags as __moduleExports };\nexport { breakingChangesX };\nexport { componentsX };\nexport { grid };","map":null,"metadata":{},"sourceType":"module"}