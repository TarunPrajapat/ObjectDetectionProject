{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport eventedShowHideState from '../../globals/js/mixins/evented-show-hide-state';\nimport handles from '../../globals/js/mixins/handles';\nimport FloatingMenu, { DIRECTION_TOP, DIRECTION_BOTTOM, DIRECTION_LEFT, DIRECTION_RIGHT } from '../floating-menu/floating-menu';\nimport getLaunchingDetails from '../../globals/js/misc/get-launching-details';\nimport on from '../../globals/js/misc/on';\nimport { componentsX } from '../../globals/js/feature-flags';\n/**\n * The CSS property names of the arrow keyed by the floating menu direction.\n * @type {Object<string, string>}\n */\n\nvar triggerButtonPositionProps =\n/* #__PURE__ */\nfunction () {\n  var _ref;\n\n  return _ref = {}, _defineProperty(_ref, DIRECTION_TOP, 'bottom'), _defineProperty(_ref, DIRECTION_BOTTOM, 'top'), _defineProperty(_ref, DIRECTION_LEFT, 'left'), _defineProperty(_ref, DIRECTION_RIGHT, 'right'), _ref;\n}();\n/**\n * Determines how the position of arrow should affect the floating menu position.\n * @type {Object<string, number>}\n */\n\n\nvar triggerButtonPositionFactors =\n/* #__PURE__ */\nfunction () {\n  var _ref2;\n\n  return _ref2 = {}, _defineProperty(_ref2, DIRECTION_TOP, -2), _defineProperty(_ref2, DIRECTION_BOTTOM, -1), _defineProperty(_ref2, DIRECTION_LEFT, -2), _defineProperty(_ref2, DIRECTION_RIGHT, -1), _ref2;\n}();\n/**\n * @param {Element} menuBody The menu body with the menu arrow.\n * @param {string} direction The floating menu direction.\n * @param {Element} trigger The trigger button.\n * @returns {FloatingMenu~offset} The adjustment of the floating menu position, upon the position of the menu arrow.\n * @private\n */\n\n\nexport var getMenuOffset = function getMenuOffset(menuBody, direction, trigger) {\n  var triggerButtonPositionProp = triggerButtonPositionProps[direction];\n  var triggerButtonPositionFactor = triggerButtonPositionFactors[direction];\n\n  if (!triggerButtonPositionProp || !triggerButtonPositionFactor) {\n    console.warn('Wrong floating menu direction:', direction); // eslint-disable-line no-console\n  }\n\n  var menuWidth = menuBody.offsetWidth;\n  var menuHeight = menuBody.offsetHeight;\n  var arrowStyle = menuBody.ownerDocument.defaultView.getComputedStyle(menuBody, ':before');\n  var values = [triggerButtonPositionProp, 'left', 'width', 'height', 'border-top-width'].reduce(function (o, name) {\n    return _objectSpread({}, o, _defineProperty({}, name, Number((/^([\\d-.]+)px$/.exec(arrowStyle.getPropertyValue(name)) || [])[1])));\n  }, {});\n\n  if (Object.keys(values).every(function (name) {\n    return !isNaN(values[name]);\n  })) {\n    var left = values.left,\n        width = values.width,\n        height = values.height,\n        borderTopWidth = values['border-top-width'];\n    return {\n      left: menuWidth / 2 - (left + Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2)) / 2),\n      top: Math.sqrt(Math.pow(borderTopWidth, 2) * 2) + triggerButtonPositionFactor * values[triggerButtonPositionProp]\n    };\n  }\n\n  if (componentsX) {\n    // eslint-disable-next-line no-use-before-define\n    var menu = OverflowMenu.components.get(trigger);\n\n    if (!menu) {\n      throw new TypeError('Overflow menu instance cannot be found.');\n    }\n\n    var flip = menuBody.classList.contains(menu.options.classMenuFlip);\n\n    if (triggerButtonPositionProp === 'top' || triggerButtonPositionProp === 'bottom') {\n      var triggerWidth = trigger.offsetWidth;\n      return {\n        left: (!flip ? 1 : -1) * (menuWidth / 2 - triggerWidth / 2),\n        top: 0\n      };\n    }\n\n    if (triggerButtonPositionProp === 'left' || triggerButtonPositionProp === 'right') {\n      var triggerHeight = trigger.offsetHeight;\n      return {\n        left: 0,\n        top: (!flip ? 1 : -1) * (menuHeight / 2 - triggerHeight / 2)\n      };\n    }\n  }\n\n  return undefined;\n};\n\nvar OverflowMenu =\n/*#__PURE__*/\nfunction (_mixin) {\n  _inherits(OverflowMenu, _mixin);\n  /**\n   * Overflow menu.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends Handles\n   * @param {HTMLElement} element The element working as a modal dialog.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorOptionMenu] The CSS selector to find the menu.\n   * @param {string} [options.classShown] The CSS class for the shown state, for the trigger UI.\n   * @param {string} [options.classMenuShown] The CSS class for the shown state, for the menu.\n   * @param {string} [options.classMenuFlip] The CSS class for the flipped state of the menu.\n   * @param {Object} [options.objMenuOffset] The offset locating the menu for the non-flipped state.\n   * @param {Object} [options.objMenuOffsetFlip] The offset locating the menu for the flipped state.\n   */\n\n\n  function OverflowMenu(element, options) {\n    var _this;\n\n    _classCallCheck(this, OverflowMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OverflowMenu).call(this, element, options));\n\n    _this.getCurrentNavigation = function () {\n      var focused = _this.element.ownerDocument.activeElement;\n      return focused.nodeType === Node.ELEMENT_NODE && focused.matches(_this.options.selectorItem) ? focused : null;\n    };\n\n    _this.navigate = function (direction) {\n      var items = _toConsumableArray(_this.element.ownerDocument.querySelectorAll(_this.options.selectorItem));\n\n      var start = _this.getCurrentNavigation() || _this.element.querySelector(_this.options.selectorItemSelected);\n\n      var getNextItem = function getNextItem(old) {\n        var handleUnderflow = function handleUnderflow(index, length) {\n          return index + (index >= 0 ? 0 : length);\n        };\n\n        var handleOverflow = function handleOverflow(index, length) {\n          return index - (index < length ? 0 : length);\n        }; // `items.indexOf(old)` may be -1 (Scenario of no previous focus)\n\n\n        var index = Math.max(items.indexOf(old) + direction, -1);\n        return items[handleUnderflow(handleOverflow(index, items.length), items.length)];\n      };\n\n      for (var current = getNextItem(start); current && current !== start; current = getNextItem(current)) {\n        if (!current.matches(_this.options.selectorItemHidden) && !current.parentNode.matches(_this.options.selectorItemHidden) && !current.matches(_this.options.selectorItemSelected)) {\n          current.focus();\n          break;\n        }\n      }\n    };\n\n    _this.manage(on(_this.element.ownerDocument, 'click', function (event) {\n      _this._handleDocumentClick(event);\n\n      _this.wasOpenBeforeClick = undefined;\n    }));\n\n    _this.manage(on(_this.element.ownerDocument, 'keydown', function (event) {\n      _this._handleKeyPress(event);\n    }));\n\n    _this.manage(on(_this.element, 'mousedown', function () {\n      _this.wasOpenBeforeClick = element.classList.contains(_this.options.classShown);\n    }));\n\n    return _this;\n  }\n  /**\n   * Changes the shown/hidden state.\n   * @param {string} state The new state.\n   * @param {Object} detail The detail of the event trigging this action.\n   * @param {Function} callback Callback called when change in state completes.\n   */\n\n\n  _createClass(OverflowMenu, [{\n    key: \"changeState\",\n    value: function changeState(state, detail, callback) {\n      if (state === 'hidden') {\n        this.element.setAttribute('aria-expanded', 'false');\n      } else {\n        this.element.setAttribute('aria-expanded', 'true');\n      }\n\n      if (!this.optionMenu) {\n        var optionMenu = this.element.querySelector(this.options.selectorOptionMenu);\n\n        if (!optionMenu) {\n          throw new Error('Cannot find the target menu.');\n        } // Lazily create a component instance for menu\n\n\n        this.optionMenu = FloatingMenu.create(optionMenu, {\n          refNode: this.element,\n          classShown: this.options.classMenuShown,\n          classRefShown: this.options.classShown,\n          offset: this.options.objMenuOffset\n        });\n        this.children.push(this.optionMenu);\n      }\n\n      if (this.optionMenu.element.classList.contains(this.options.classMenuFlip)) {\n        this.optionMenu.options.offset = this.options.objMenuOffsetFlip;\n      } // Delegates the action of changing state to the menu.\n      // (And thus the before/after shown/hidden events are fired from the menu)\n\n\n      this.optionMenu.changeState(state, Object.assign(detail, {\n        delegatorNode: this.element\n      }), callback);\n    }\n    /**\n     * Handles click on document.\n     * @param {Event} event The triggering event.\n     * @private\n     */\n\n  }, {\n    key: \"_handleDocumentClick\",\n    value: function _handleDocumentClick(event) {\n      var element = this.element,\n          optionMenu = this.optionMenu,\n          wasOpenBeforeClick = this.wasOpenBeforeClick;\n      var isOfSelf = element.contains(event.target);\n      var isOfMenu = optionMenu && optionMenu.element.contains(event.target);\n      var shouldBeOpen = isOfSelf && !wasOpenBeforeClick;\n      var state = shouldBeOpen ? 'shown' : 'hidden';\n\n      if (isOfSelf) {\n        if (element.tagName === 'A') {\n          event.preventDefault();\n        }\n\n        event.delegateTarget = element; // eslint-disable-line no-param-reassign\n      }\n\n      this.changeState(state, getLaunchingDetails(event), function () {\n        if (state === 'hidden' && isOfMenu) {\n          element.focus();\n        }\n      });\n    }\n    /**\n     * Provides the element to move focus from\n     * @returns {Element} Currently highlighted element.\n     */\n\n  }, {\n    key: \"_handleKeyPress\",\n\n    /**\n     * Handles key press on document.\n     * @param {Event} event The triggering event.\n     * @private\n     */\n    value: function _handleKeyPress(event) {\n      var key = event.which;\n      var element = this.element,\n          optionMenu = this.optionMenu,\n          options = this.options;\n      var isOfMenu = optionMenu && optionMenu.element.contains(event.target);\n      var isExpanded = this.element.classList.contains(this.options.classShown);\n\n      switch (key) {\n        // Esc\n        case 27:\n          this.changeState('hidden', getLaunchingDetails(event), function () {\n            if (isOfMenu) {\n              element.focus();\n            }\n          });\n          break;\n        // Enter || Space bar\n\n        case 13:\n        case 32:\n          {\n            if (!isExpanded && this.element.ownerDocument.activeElement !== this.element) {\n              return;\n            }\n\n            event.preventDefault(); // prevent scrolling\n\n            var isOfSelf = element.contains(event.target);\n            var shouldBeOpen = isOfSelf && !element.classList.contains(options.classShown);\n            var state = shouldBeOpen ? 'shown' : 'hidden';\n\n            if (isOfSelf) {\n              event.delegateTarget = element; // eslint-disable-line no-param-reassign\n            }\n\n            this.changeState(state, getLaunchingDetails(event), function () {\n              if (state === 'hidden' && isOfMenu) {\n                element.focus();\n              }\n            });\n            break;\n          }\n\n        case 38: // up arrow\n\n        case 40:\n          // down arrow\n          {\n            if (!isExpanded) {\n              return;\n            }\n\n            event.preventDefault(); // prevent scrolling\n\n            var direction = {\n              38: -1,\n              40: 1\n            }[event.which];\n            this.navigate(direction);\n          }\n          break;\n\n        default:\n          break;\n      }\n    }\n  }], [{\n    key: \"options\",\n    get: function get() {\n      var prefix = settings.prefix;\n      return {\n        selectorInit: '[data-overflow-menu]',\n        selectorOptionMenu: \".\".concat(prefix, \"--overflow-menu-options\"),\n        selectorItem: \"\\n        .\".concat(prefix, \"--overflow-menu-options--open >\\n        .\").concat(prefix, \"--overflow-menu-options__option:not(.\").concat(prefix, \"--overflow-menu-options__option--disabled) >\\n        .\").concat(prefix, \"--overflow-menu-options__btn\\n      \"),\n        classShown: \"\".concat(prefix, \"--overflow-menu--open\"),\n        classMenuShown: \"\".concat(prefix, \"--overflow-menu-options--open\"),\n        classMenuFlip: \"\".concat(prefix, \"--overflow-menu--flip\"),\n        objMenuOffset: getMenuOffset,\n        objMenuOffsetFlip: getMenuOffset\n      };\n    }\n  }]);\n\n  OverflowMenu.components = new WeakMap();\n  return OverflowMenu;\n}(mixin(createComponent, initComponentBySearch, eventedShowHideState, handles));\n\nexport default OverflowMenu;","map":null,"metadata":{},"sourceType":"module"}