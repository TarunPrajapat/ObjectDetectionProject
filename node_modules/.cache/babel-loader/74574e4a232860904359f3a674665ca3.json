{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash.omit';\nimport cx from 'classnames';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar TableRow = function TableRow(props) {\n  // Remove unnecessary props if provided to this component, these are\n  // only useful in `TableExpandRow`\n  var className = cx(props.className, _defineProperty({}, \"\".concat(prefix, \"--data-table-v2--selected\"), props.isSelected));\n\n  var cleanProps = _objectSpread({}, omit(props, ['ariaLabel', 'onExpand', 'isExpanded', 'isSelected']), {\n    className: className || undefined\n  });\n\n  return React.createElement(\"tr\", cleanProps);\n};\n\nTableRow.propTypes = {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string\n};\nexport default TableRow;","map":null,"metadata":{},"sourceType":"module"}