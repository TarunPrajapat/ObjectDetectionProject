{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar StructuredListSkeleton = function StructuredListSkeleton(_ref) {\n  var _classNames;\n\n  var rowCount = _ref.rowCount,\n      border = _ref.border;\n  var StructuredListSkeletonClasses = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--structured-list\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--structured-list--border\"), border), _classNames));\n  var rows = [];\n\n  for (var i = 0; i < rowCount; i++) {\n    rows.push(React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--structured-list-row\"),\n      key: i\n    }, React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--structured-list-td\")\n    }), React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--structured-list-td\")\n    }), React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--structured-list-td\")\n    })));\n  }\n\n  return React.createElement(\"section\", {\n    className: StructuredListSkeletonClasses\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-thead\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-row \").concat(prefix, \"--structured-list-row--header-row\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-th\")\n  }, React.createElement(\"span\", null)), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-th\")\n  }, React.createElement(\"span\", null)), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-th\")\n  }, React.createElement(\"span\", null)))), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-tbody\")\n  }, rows));\n};\n\nStructuredListSkeleton.propTypes = {\n  /**\n   * number of table rows\n   */\n  rowCount: PropTypes.number,\n\n  /**\n   * Specify whether a border should be added to your StructuredListSkeleton\n   */\n  border: PropTypes.bool\n};\nStructuredListSkeleton.defaultProps = {\n  rowCount: 5,\n  border: false\n};\nexport default StructuredListSkeleton;","map":null,"metadata":{},"sourceType":"module"}