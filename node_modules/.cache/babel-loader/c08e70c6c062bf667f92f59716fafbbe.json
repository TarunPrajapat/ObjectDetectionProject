{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from '../Icon';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport { ButtonTypes } from '../../prop-types/types';\nimport { componentsX } from '../../internal/FeatureFlags';\nvar prefix = settings.prefix;\n\nvar Button = function Button(_ref) {\n  var _classNames;\n\n  var children = _ref.children,\n      className = _ref.className,\n      disabled = _ref.disabled,\n      small = _ref.small,\n      kind = _ref.kind,\n      href = _ref.href,\n      tabIndex = _ref.tabIndex,\n      type = _ref.type,\n      icon = _ref.icon,\n      iconDescription = _ref.iconDescription,\n      other = _objectWithoutProperties(_ref, [\"children\", \"className\", \"disabled\", \"small\", \"kind\", \"href\", \"tabIndex\", \"type\", \"icon\", \"iconDescription\"]);\n\n  var buttonClasses = classNames(className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--btn\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--sm\"), small), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--primary\"), kind === 'primary'), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--danger\"), kind === 'danger'), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--secondary\"), kind === 'secondary'), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--ghost\"), kind === 'ghost'), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--danger--primary\"), kind === 'danger--primary'), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--tertiary\"), kind === 'tertiary'), _classNames));\n  var commonProps = {\n    tabIndex: tabIndex,\n    className: buttonClasses\n  };\n\n  var buttonImage = function () {\n    if (componentsX && icon && React.isValidElement(icon)) {\n      return icon;\n    }\n\n    if (!componentsX && icon) {\n      return React.createElement(Icon, {\n        icon: Object(icon) === icon ? icon : undefined,\n        name: Object(icon) !== icon ? icon : undefined,\n        description: iconDescription,\n        className: \"\".concat(prefix, \"--btn__icon\"),\n        \"aria-hidden\": \"true\"\n      });\n    }\n\n    return null;\n  }();\n\n  var button = React.createElement(\"button\", _extends({}, other, commonProps, {\n    disabled: disabled,\n    type: type,\n    ref: other.inputref\n  }), children, buttonImage);\n  var anchor = React.createElement(\"a\", _extends({}, other, commonProps, {\n    href: href,\n    role: \"button\",\n    ref: other.inputref\n  }), children, buttonImage);\n  return href ? anchor : button;\n};\n\nButton.propTypes = {\n  /**\n   * Specify the content of your Button\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be added to your Button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether the Button should be disabled, or not\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify whether the Button should be a small variant\n   */\n  small: PropTypes.bool,\n\n  /**\n   * Specify the kind of Button you want to create\n   */\n  kind: ButtonTypes.buttonKind.isRequired,\n\n  /**\n   * Optionally specify an href for your Button to become an <a> element\n   */\n  href: PropTypes.string,\n\n  /**\n   * Optional prop to specify the tabIndex of the Button\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * Optional prop to specify the type of the Button\n   */\n  type: PropTypes.oneOf(['button', 'reset', 'submit']),\n\n  /**\n   * Optional prop to specify the role of the Button\n   */\n  role: PropTypes.string,\n\n  /**\n   * Specify an icon to include in the Button through a string or object\n   * representing the SVG data of the icon\n   */\n  icon: PropTypes.oneOfType([PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    viewBox: PropTypes.string.isRequired,\n    svgData: PropTypes.object.isRequired\n  }), PropTypes.string, PropTypes.node]),\n\n  /**\n   * If specifying the `icon` prop, provide a description for that icon that can\n   * be read by screen readers\n   */\n  iconDescription: function iconDescription(props) {\n    if (props.icon && !props.iconDescription) {\n      return new Error('icon property specified without also providing an iconDescription property.');\n    }\n\n    return undefined;\n  }\n};\nButton.defaultProps = {\n  iconDescription: 'Provide icon description if icon is used',\n  tabIndex: 0,\n  type: 'button',\n  disabled: false,\n  small: false,\n  kind: 'primary'\n};\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}